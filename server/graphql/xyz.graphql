scalar DateTime

type AccessAction {
    idAccessAction: Int!
    Name: String!
    SortOrder: Int!
    AccessRoleAccessActionXref: [AccessRoleAccessActionXref]
}

type AccessContext {
    idAccessContext: Int!
    Authoritative: Boolean!
    CaptureData: Boolean!
    Global: Boolean!
    IntermediaryFile: Boolean!
    Model: Boolean!
    Scene: Boolean!
    AccessContextObject: [AccessContextObject]
    AccessPolicy: [AccessPolicy]
}

type AccessContextObject {
    idAccessContextObject: Int!
    idAccessContext: Int!
    idSystemObject: Int!
    AccessContext: AccessContext
    SystemObject: SystemObject
}

type AccessPolicy {
    idAccessPolicy: Int!
    idAccessContext: Int!
    idAccessRole: Int!
    idUser: Int!
    AccessContext: AccessContext
    AccessRole: AccessRole
    User: User
}

type AccessRole {
    idAccessRole: Int!
    Name: String!
    AccessPolicy: [AccessPolicy]
    AccessRoleAccessActionXref: [AccessRoleAccessActionXref]
}

type AccessRoleAccessActionXref {
    idAccessRoleAccessActionXref: Int!
    idAccessAction: Int!
    idAccessRole: Int!
    AccessAction: AccessAction
    AccessRole: AccessRole
}

type Actor {
    idActor: Int!
    idUnit: Int
    IndividualName: String
    OrganizationName: String
    Unit: Unit
    ModelProcessingAction: [ModelProcessingAction]
    SystemObject: SystemObject
}

type Asset {
    idAsset: Int!
    FileName: String!
    FilePath: String!
    idAssetGroup: Int
    AssetGroup: AssetGroup
    AssetVersion: [AssetVersion]
    CaptureData: [CaptureData]
    CaptureDataFile: [CaptureDataFile]
    IntermediaryFile: [IntermediaryFile]
    Item: [Item]
    Metadata: [Metadata]
    Model: [Model]
    ModelGeometryFile: [ModelGeometryFile]
    ModelUVMapFile: [ModelUVMapFile]
    Scene: [Scene]
    Subject: [Subject]
    SystemObject: SystemObject
}

type AssetGroup {
    idAssetGroup: Int!
    Asset: [Asset]
}

type AssetVersion {
    idAssetVersion: Int!
    DateCreated: DateTime!
    idAsset: Int!
    idUserCreator: Int!
    StorageChecksum: String!
    StorageLocation: String!
    StorageSize: Int!
    Asset: Asset
    User: User
    SystemObject: SystemObject
}

type CaptureData {
    idCaptureData: Int!
    DateCaptured: DateTime!
    Description: String!
    idVCaptureDatasetType: Int!
    idVCaptureMethod: Int!
    CameraSettingsUniform: Boolean
    CaptureDatasetFieldID: Int
    ClusterGeometryFieldID: Int
    idAssetThumbnail: Int
    idVBackgroundRemovalMethod: Int
    idVClusterType: Int
    idVFocusType: Int
    idVItemPositionType: Int
    idVLightSourceType: Int
    ItemArrangementFieldID: Int
    ItemPositionFieldID: Int
    Asset: Asset
    Vocabulary_CaptureData_idVBackgroundRemovalMethodToVocabulary: Vocabulary
    Vocabulary_CaptureData_idVCaptureDatasetTypeToVocabulary: Vocabulary
    Vocabulary_CaptureData_idVCaptureMethodToVocabulary: Vocabulary
    Vocabulary_CaptureData_idVClusterTypeToVocabulary: Vocabulary
    Vocabulary_CaptureData_idVFocusTypeToVocabulary: Vocabulary
    Vocabulary_CaptureData_idVItemPositionTypeToVocabulary: Vocabulary
    Vocabulary_CaptureData_idVLightSourceTypeToVocabulary: Vocabulary
    CaptureDataFile: [CaptureDataFile]
    CaptureDataGroupCaptureDataXref: [CaptureDataGroupCaptureDataXref]
    SystemObject: SystemObject
}

type CaptureDataFile {
    idCaptureDataFile: Int!
    CompressedMultipleFiles: Boolean!
    idAsset: Int!
    idCaptureData: Int!
    idVVariantType: Int!
    Asset: Asset
    CaptureData: CaptureData
    Vocabulary: Vocabulary
}

type CaptureDataGroup {
    idCaptureDataGroup: Int!
    CaptureDataGroupCaptureDataXref: [CaptureDataGroupCaptureDataXref]
}

type CaptureDataGroupCaptureDataXref {
    idCaptureData: Int!
    idCaptureDataGroup: Int!
    idCaptureDataGroupCaptureDataXref: Int!
    CaptureData: CaptureData
    CaptureDataGroup: CaptureDataGroup
}

type GeoLocation {
    idGeoLocation: Int!
    Altitude: Float
    Latitude: Float
    Longitude: Float
    R0: Float
    R1: Float
    R2: Float
    R3: Float
    TS0: Float
    TS1: Float
    TS2: Float
    Item: [Item]
    Subject: [Subject]
}

type Identifier {
    idIdentifier: Int!
    IdentifierValue: String!
    idSystemObject: Int
    idVIdentifierType: Int
    SystemObject: SystemObject
    Vocabulary: Vocabulary
}

type IntermediaryFile {
    idIntermediaryFile: Int!
    DateCreated: DateTime!
    idAsset: Int!
    Asset: Asset
    SystemObject: SystemObject
}

type Item {
    idItem: Int!
    EntireSubject: Boolean!
    idSubject: Int!
    Name: String!
    idAssetThumbnail: Int
    idGeoLocation: Int
    Asset: Asset
    GeoLocation: GeoLocation
    Subject: Subject
    SystemObject: SystemObject
}

type License {
    idLicense: Int!
    Description: String!
    Name: String!
    LicenseAssignment: [LicenseAssignment]
}

type LicenseAssignment {
    idLicenseAssignment: Int!
    idLicense: Int!
    DateEnd: DateTime
    DateStart: DateTime
    idSystemObject: Int
    idUserCreator: Int
    License: License
    SystemObject: SystemObject
    User: User
}

type Metadata {
    idMetadata: Int!
    Name: String!
    idAssetValue: Int
    idSystemObject: Int
    idUser: Int
    idVMetadataSource: Int
    ValueExtended: String
    ValueShort: String
    Asset: Asset
    SystemObject: SystemObject
    User: User
    Vocabulary: Vocabulary
}

type Model {
    idModel: Int!
    Authoritative: Boolean!
    DateCreated: DateTime!
    idAssetThumbnail: Int
    idVCreationMethod: Int!
    idVModality: Int!
    idVPurpose: Int!
    idVUnits: Int!
    Master: Boolean!
    Asset: Asset
    Vocabulary_Model_idVCreationMethodToVocabulary: Vocabulary
    Vocabulary_Model_idVModalityToVocabulary: Vocabulary
    Vocabulary_Model_idVPurposeToVocabulary: Vocabulary
    Vocabulary_Model_idVUnitsToVocabulary: Vocabulary
    ModelGeometryFile: [ModelGeometryFile]
    ModelProcessingAction: [ModelProcessingAction]
    ModelSceneXref: [ModelSceneXref]
    SystemObject: SystemObject
}

type ModelGeometryFile {
    idModelGeometryFile: Int!
    idAsset: Int!
    idModel: Int!
    idVModelFileType: Int!
    BoundingBoxP1X: Float
    BoundingBoxP1Y: Float
    BoundingBoxP1Z: Float
    BoundingBoxP2X: Float
    BoundingBoxP2Y: Float
    BoundingBoxP2Z: Float
    FaceCount: Int
    HasNormals: Boolean
    HasUVSpace: Boolean
    HasVertexColor: Boolean
    IsWatertight: Boolean
    Metalness: Float
    PointCount: Int
    Roughness: Float
    Asset: Asset
    Model: Model
    Vocabulary: Vocabulary
    ModelUVMapFile: [ModelUVMapFile]
}

type ModelProcessingAction {
    idModelProcessingAction: Int!
    DateProcessed: DateTime!
    Description: String!
    idActor: Int!
    idModel: Int!
    ToolsUsed: String!
    Actor: Actor
    Model: Model
    ModelProcessingActionStep: [ModelProcessingActionStep]!
}

type ModelProcessingActionStep {
    idModelProcessingActionStep: Int!
    Description: String!
    idModelProcessingAction: Int!
    idVActionMethod: Int!
    ModelProcessingAction: ModelProcessingAction
    Vocabulary: Vocabulary
}

type ModelSceneXref {
    idModelSceneXref: Int!
    idModel: Int!
    idScene: Int!
    R0: Float
    R1: Float
    R2: Float
    R3: Float
    TS0: Float
    TS1: Float
    TS2: Float
    Model: Model
    Scene: Scene
}

type ModelUVMapChannel {
    idModelUVMapChannel: Int!
    ChannelPosition: Int!
    ChannelWidth: Int!
    idModelUVMapFile: Int!
    idVUVMapType: Int!
    ModelUVMapFile: ModelUVMapFile
    Vocabulary: Vocabulary
}

type ModelUVMapFile {
    idModelUVMapFile: Int!
    idAsset: Int!
    idModelGeometryFile: Int!
    UVMapEdgeLength: Int!
    Asset: Asset
    ModelGeometryFile: ModelGeometryFile
    ModelUVMapChannel: [ModelUVMapChannel]
}

type Project {
    idProject: Int!
    Name: String!
    Description: String
    ProjectDocumentation: [ProjectDocumentation]
    SystemObject: SystemObject
    Workflow: [Workflow]
}

type ProjectDocumentation {
    idProjectDocumentation: Int!
    Description: String!
    idProject: Int!
    Name: String!
    Project: Project!
    SystemObject: SystemObject
}

type Scene {
    idScene: Int!
    HasBeenQCd: Boolean!
    idAssetThumbnail: Int
    IsOriented: Boolean!
    Name: String!
    Asset: Asset
    ModelSceneXref: [ModelSceneXref]
    SystemObject: SystemObject
}

type Stakeholder {
    idStakeholder: Int!
    IndividualName: String!
    OrganizationName: String!
    MailingAddress: String
    EmailAddress: String
    PhoneNumberMobile: String
    PhoneNumberOffice: String
    SystemObject: SystemObject
}

type Subject {
    idSubject: Int!
    idUnit: Int!
    Name: String!
    Asset: Asset
    idAssetThumbnail: Int
    idGeoLocation: Int
    GeoLocation: GeoLocation
    Unit: Unit
    Item: [Item]
    SystemObject: SystemObject
}

type SystemObject {
    idSystemObject: Int!
    idActor: Int
    idAsset: Int
    idAssetVersion: Int
    idCaptureData: Int
    idIntermediaryFile: Int
    idItem: Int
    idModel: Int
    idProject: Int
    idProjectDocumentation: Int
    idScene: Int
    idStakeholder: Int
    idSubject: Int
    idUnit: Int
    idWorkflow: Int
    idWorkflowStep: Int
    Retired: Boolean!
    Actor: Actor
    Asset: Asset
    AssetVersion: AssetVersion
    CaptureData: CaptureData
    IntermediaryFile: IntermediaryFile
    Item: Item
    Model: Model
    Project: Project
    ProjectDocumentation: ProjectDocumentation
    Scene: Scene
    Stakeholder: Stakeholder
    Subject: Subject
    Unit: Unit
    Workflow: Workflow
    WorkflowStep: WorkflowStep
    AccessContextObject: [AccessContextObject]
    Identifier: [Identifier]
    LicenseAssignment: [LicenseAssignment]
    Metadata: [Metadata]
    SystemObjectVersion: [SystemObjectVersion]
    SystemObjectXref_SystemObjectToSystemObjectXref_idSystemObjectDerived: [SystemObjectXref]
    SystemObjectXref_SystemObjectToSystemObjectXref_idSystemObjectMaster: [SystemObjectXref]
    UserPersonalizationSystemObject: [UserPersonalizationSystemObject]
    WorkflowStepSystemObjectXref: [WorkflowStepSystemObjectXref]!
}

type SystemObjectVersion {
    idSystemObjectVersion: Int!
    idSystemObject: Int!
    PublishedState: Int!
    SystemObject: SystemObject
}

type SystemObjectXref {
    idSystemObjectXref: Int!
    idSystemObjectDerived: Int!
    idSystemObjectMaster: Int!
    SystemObject_SystemObjectToSystemObjectXref_idSystemObjectDerived: SystemObject
    SystemObject_SystemObjectToSystemObjectXref_idSystemObjectMaster: SystemObject
}

type Unit {
    idUnit: Int!
    Abbreviation: String
    ARKPrefix: String
    Name: String!
    Actor: [Actor]
    Subject: [Subject]
    SystemObject: SystemObject
}

type User {
    idUser: Int!
    Active: Boolean!
    DateActivated: DateTime!
    EmailAddress: String!
    Name: String!
    SecurityID: String!
    DateDisabled: DateTime
    EmailSettings: Int
    WorkflowNotificationTime: DateTime
    AccessPolicy: [AccessPolicy]
    AssetVersion: [AssetVersion]
    LicenseAssignment: [LicenseAssignment]
    Metadata: [Metadata]
    UserPersonalizationSystemObject: [UserPersonalizationSystemObject]
    UserPersonalizationUrl: [UserPersonalizationUrl]
    Workflow: [Workflow]
    WorkflowStep: [WorkflowStep]
}

type UserPersonalizationSystemObject {
    idUserPersonalizationSystemObject: Int!
    idSystemObject: Int!
    idUser: Int!
    Personalization: String
    SystemObject: SystemObject
    User: User
}

type UserPersonalizationUrl {
    idUserPersonalizationUrl: Int!
    idUser: Int!
    Personalization: String!
    URL: String!
    User: User
}

type Vocabulary {
    idVocabulary: Int!
    idVocabularySet: Int!
    SortOrder: Int!
    VocabularySet: VocabularySet
    CaptureData_CaptureData_idVBackgroundRemovalMethodToVocabulary: [CaptureData]
    CaptureData_CaptureData_idVCaptureDatasetTypeToVocabulary: [CaptureData]
    CaptureData_CaptureData_idVCaptureMethodToVocabulary: [CaptureData]
    CaptureData_CaptureData_idVClusterTypeToVocabulary: [CaptureData]
    CaptureData_CaptureData_idVFocusTypeToVocabulary: [CaptureData]
    CaptureData_CaptureData_idVItemPositionTypeToVocabulary: [CaptureData]
    CaptureData_CaptureData_idVLightSourceTypeToVocabulary: [CaptureData]
    CaptureDataFile: [CaptureDataFile]
    Identifier: [Identifier]
    Metadata: [Metadata]
    Model_Model_idVCreationMethodToVocabulary: [Model]
    Model_Model_idVModalityToVocabulary: [Model]
    Model_Model_idVPurposeToVocabulary: [Model]
    Model_Model_idVUnitsToVocabulary: [Model]
    ModelGeometryFile: [ModelGeometryFile]
    ModelProcessingActionStep: [ModelProcessingActionStep]
    ModelUVMapChannel: [ModelUVMapChannel]
    WorkflowStep: [WorkflowStep]
}

type VocabularySet {
    idVocabularySet: Int!
    Name: String!
    SystemMaintained: Boolean!
    Vocabulary: [Vocabulary]
}

type Workflow {
    idWorkflow: Int!
    DateInitiated: DateTime!
    DateUpdated: DateTime!
    idWorkflowTemplate: Int!
    idProject: Int
    idUserInitiator: Int
    Project: Project
    User: User
    WorkflowTemplate: WorkflowTemplate
    SystemObject: SystemObject
    WorkflowStep: [WorkflowStep]
}

type WorkflowStep {
    idWorkflowStep: Int!
    DateCreated: DateTime!
    idUserOwner: Int!
    idVWorkflowStepType: Int!
    idWorkflow: Int!
    State: Int!
    DateCompleted: DateTime
    User: User
    Vocabulary: Vocabulary
    Workflow: Workflow
    SystemObject: SystemObject
    WorkflowStepSystemObjectXref: [WorkflowStepSystemObjectXref]
}

type WorkflowStepSystemObjectXref {
    idSystemObject: Int!
    idWorkflowStep: Int!
    idWorkflowStepSystemObjectXref: Int!
    Input: Boolean!
    SystemObject: SystemObject
    WorkflowStep: WorkflowStep
}

type WorkflowTemplate {
    idWorkflowTemplate: Int!
    Name: String!
    Workflow: [Workflow]
}
