scalar DateTime

type Asset {
  idAsset: ID!
  FileName: String!
  FilePath: String!
  AssetGroup: AssetGroup
  CaptureDataFile: [CaptureDataFile]
  Scene: [Scene]
  IntermediaryFile: [IntermediaryFile]
}

type AssetVersion {
  idAssetVersion: ID!
  Asset: Asset
  UserCreator: User
  DateCreated: DateTime!
  StorageLocation: String!
  StorageChecksum: String!
  StorageSize: Int!
}

type AssetGroup {
  idAssetGroup: ID!
  Asset: [Asset]
}

type CaptureData {
  idCaptureData: ID!
  VCaptureMethod: Vocabulary!
  VCaptureDatasetType: Vocabulary!
  CaptureDate: DateTime!
  Description: String!
  CaptureDatasetFieldId: Int
  VItemPositionType: Vocabulary
  ItemPositionFieldId: Int
  ItemArrangementFieldId: Int
  VFocusType: Vocabulary
  VLightSourceType: Vocabulary
  VBackgroundRemovalMethod: Vocabulary
  VClusterType: Vocabulary
  ClusterGeometryFieldId: Int
  CameraSettingsUniform: Boolean
  AssetThumbnail: Asset
  CaptureDataGroup: [CaptureDataGroup]
  CaptureDataFile: [CaptureDataFile]
}

type CaptureDataFile {
  idCaptureDataFile: ID!
  CaptureData: CaptureData!
  Asset: Asset!
  VVariantType: Vocabulary!
  CompressedMultipleFiles: Boolean!
}

type CaptureDataGroup {
  idCaptureDataGroup: ID!
  CaptureData: [CaptureData]
}

type License {
  idLicense: ID!
  Name: String!
  Description: String!
  LicenseAssignment: [LicenseAssignment]
}

type LicenseAssignment {
  idLicenseAssignment: ID!
  License: License!
  UserCreator: User
  DateStart: DateTime
  DateEnd: DateTime
}

type Model {
  idModel: ID!
  DateCreated: DateTime!
  VCreationMethod: Vocabulary!
  Master: Boolean!
  Authoritative: Boolean!
  VModality: Vocabulary!
  VUnits: Vocabulary!
  VPurpose: Vocabulary!
  AssetThumbnail: Asset
  Orientation: Orientation
}

type Orientation {
  TS0: Float
  TS1: Float
  TS2: Float
  R0: Float
  R1: Float
  R2: Float
  R3: Float
}

type ModelGeometryFile {
  idModelGeometryFile: ID!
  Model: Model!
  Asset: Asset!
  VModelFileType: Vocabulary!
  Roughness: Float
  Metalness: Float
  PointCount: Int
  FaceCount: Int
  IsWatertight: Boolean
  HasNormals: Boolean
  HasVertexColor: Boolean
  HasUvSpace: Boolean
  BoundingBoxP1X: Float
  BoundingBoxP1Y: Float
  BoundingBoxP1Z: Float
  BoundingBoxP2X: Float
  BoundingBoxP2Y: Float
  BoundingBoxP2Z: Float
}

type ModelProcessingAction {
  idModelProcessingAction: ID!
  Model: Model!
  Actor: Actor!
  DateProcessed: DateTime!
  ToolsUsed: String!
  Description: String!
  ModelProcessingActionStep: [ModelProcessingActionStep]
}

type ModelProcessingActionStep {
  idModelProcessingActionStep: ID!
  ModelProcessingAction: ModelProcessingAction!
  VActionMethod: Vocabulary!
  Description: String!
}

type ModelUVMapFile {
  idModelUVMapFile: ID!
  ModelGeometryFile: ModelGeometryFile!
  Asset: Asset!
  UVMapEdgeLength: Int!
  ModelUVMapChannel: [ModelUVMapChannel]
}

type ModelUVMapChannel {
  idModelUVMapChannel: ID!
  ModelUvMapFile: ModelUVMapFile!
  ChannelPosition: Int!
  ChannelWidth: Int!
  VUVMapType: Vocabulary!
}

type Scene {
  idScene: ID!
  Name: String!
  AssetThumbnail: Asset
  IsOriented: Boolean!
  HasBeenQCd: Boolean!
  Model: [Model]
}

type Actor {
  idActor: ID!
  IndividualName: String
  OrganizationName: String
  Unit: Unit
}

type IntermediaryFile {
  idIntermediaryFile: ID!
  Asset: Asset!
  DateCreated: DateTime!
}

type Unit {
  id: ID!
  Name: String!
  Abbreviation: String
  ARKPrefix: String
  Subject: [Subject]
  Actor: [Actor]
}

type Project {
  idProject: ID!
  Name: String!
  Description: String
  ProjectDocumentation: [ProjectDocumentation]
}

type ProjectDocumentation {
  idProjectDocumentation: ID!
  Project: Project!
  Name: String!
  Description: String!
}

type Stakeholder {
  idStakeholder: ID!
  IndividualName: String!
  OrganizationName: String!
  EmailAddress: String
  PhoneNumberMobile: String
  PhoneNumberOffice: String
  MailingAddress: String
}

type GeoLocation {
  idGeoLocation: ID!
  Latitude: Float
  Longitude: Float
  Altitude: Float
  TS0: Float
  TS1: Float
  TS2: Float
  R0: Float
  R1: Float
  R2: Float
  R3: Float
  Item: [Item]
  Subject: [Subject]
}

type Subject {
  idSubject: ID!
  Unit: Unit
  AssetThumbnail: Asset
  Name: String!
  GeoLocation: GeoLocation
  Item: [Item]
}

type Item {
  idItem: ID!
  Subject: Subject
  AssetThumbnail: Asset
  GeoLocation: GeoLocation
  Name: String!
  EntireSubject: Boolean!
}

type User {
  idUser: ID!
  Name: String!
  EmailAddress: String!
  SecurityID: String!
  Active: Boolean!
  DateActivated: DateTime!
  DateDisabled: DateTime
  WorkflowNotificationTime: DateTime
  EmailSettings: Int
  UserPersonalizationSystemObject: [UserPersonalizationSystemObject]
  UserPersonalizationUrl: [UserPersonalizationUrl]
  LicenseAssignment: [LicenseAssignment]
}

type UserPersonalizationSystemObject {
  idUserPersonalizationSystemObject: ID!
  User: User
  Personalization: String
}

type UserPersonalizationUrl {
  idUserPersonalizationUrl: ID!
  User: User
  URL: String!
  Personalization: String!
}

type Vocabulary {
  idVocabulary: ID!
  VocabularySet: VocabularySet!
  SortOrder: Int!
}

type VocabularySet {
  idVocabularySet: ID!
  Name: String!
  SystemMaintained: Boolean!
}

type Query {
  getAsset(input: GetAssetInput!): GetAssetResult!
  getLicense(input: GetLicenseInput!): GetLicenseResult!
  getUnit(input: GetUnitInput!): GetUnitResult!
  getUser(input: GetUserInput!): GetUserResult!
  getVocabulary(input: GetVocabularyInput!): GetVocabularyResult!
}

input GetAssetInput {
  id: ID!
}

type GetAssetResult {
  asset: Asset
}

input GetLicenseInput {
  id: ID!
}

type GetLicenseResult {
  license: License
}

input GetUnitInput {
  id: ID!
}

type GetUnitResult {
  unit: Unit
}

input GetUserInput {
  id: ID!
}

type GetUserResult {
  user: User
}

input GetVocabularyInput {
  id: ID!
}

type GetVocabularyResult {
  vocabulary: Vocabulary
}
