type Query {
    getAsset(input: GetAssetInput!): GetAssetResult!
    getUploadedAssetVersion: GetUploadedAssetVersionResult!
    getContentsForAssetVersions(input: GetContentsForAssetVersionsInput!): GetContentsForAssetVersionsResult!
    getAssetVersionsDetails(input: GetAssetVersionsDetailsInput!): GetAssetVersionsDetailsResult!
}

input GetAssetVersionsDetailsInput {
    idAssetVersions: [Int!]!
}

type IngestIdentifier {
    identifier: String!
    identifierType: Int!
}

type IngestFolder {
    name: String!
    variantType: Int!
}

type IngestPhotogrammetry {
    idAssetVersion: Int!
    dateCaptured: String!
    datasetType: Int!
    systemCreated: Boolean!
    description: String!
    cameraSettingUniform: Boolean!
    datasetFieldId: Int
    itemPositionType: Int
    itemPositionFieldId: Int
    itemArrangementFieldId: Int
    focusType: Int
    lightsourceType: Int
    backgroundRemovalMethod: Int
    clusterType: Int
    clusterGeometryFieldId: Int
    directory: String!
    folders: [IngestFolder!]!
    identifiers: [IngestIdentifier!]!
}

type IngestUVMap {
    name: String!
    mapType: Int!
}

type IngestModel {
    idAssetVersion: Int!
    systemCreated: Boolean!
    master: Boolean!
    authoritative: Boolean!
    creationMethod: Int!
    modality: Int!
    purpose: Int!
    units: Int!
    dateCaptured: String!
    modelFileType: Int!
    directory: String!
    identifiers: [IngestIdentifier!]!
    uvMaps: [IngestUVMap!]!
    roughness: Int
    metalness: Int
    pointCount: Int
    faceCount: Int
    isWatertight: Boolean
    hasNormals: Boolean
    hasVertexColor: Boolean
    hasUVSpace: Boolean
    boundingBoxP1X: Int
    boundingBoxP1Y: Int
    boundingBoxP1Z: Int
    boundingBoxP2X: Int
    boundingBoxP2Y: Int
    boundingBoxP2Z: Int
}

type IngestScene {
    idAssetVersion: Int!
    identifiers: [IngestIdentifier!]!
}

type GetAssetVersionDetailResult {
    idAssetVersion: Int!
    SubjectUnitIdentifier: SubjectUnitIdentifier
    Project: [Project!]
    Item: Item
    CaptureDataPhoto: IngestPhotogrammetry
    Model: IngestModel
    Scene: IngestScene
}

type GetAssetVersionsDetailsResult {
    valid: Boolean!
    Details: [GetAssetVersionDetailResult!]!
}

input GetAssetInput {
    idAsset: Int!
}

type GetAssetResult {
    Asset: Asset
}

type GetUploadedAssetVersionResult {
    AssetVersion: [AssetVersion!]!
}

input GetContentsForAssetVersionsInput {
    idAssetVersions: [Int!]!
}

type AssetVersionContent {
    idAssetVersion: Int!
    folders: [String!]!
    all: [String!]!
}

type GetContentsForAssetVersionsResult {
    AssetVersionContent: [AssetVersionContent!]!
}
